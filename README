#------------------------------------------------------------------------------------
#  SusyCommon
#
#  A RootCore package for common UCI SUSY analysis
#------------------------------------------------------------------------------------

# For useful information on using these packages, please consult the TWiki:
https://twiki.cern.ch/twiki/bin/viewauth/AtlasProtected/UCISusyNtuples

# Link to code in SVN browser
https://svnweb.cern.ch/trac/atlasinst/browser/Institutes/UCIrvine/SUSYAnalysis/SusyCommon

# To checkout the package trunk
svn co svn+ssh://svn.cern.ch/reps/atlasinst/Institutes/UCIrvine/SUSYAnalysis/SusyCommon/trunk SusyCommon

# For the currently recommended tag, please see the TWiki
svn co svn+ssh://svn.cern.ch/reps/atlasinst/Institutes/UCIrvine/SUSYAnalysis/SusyCommon/tags/SusyCommon-XX-YY-ZZ SusyCommon

# To make a tag, use the script/makeTag.sh script (only for developers)
./scripts/makeTag.sh SusyCommon-XX-YY-ZZ "Some message"

# To install, check out SusyNtuple, the MultiLep Common code, and run the MultiLep install script 
# NOTE that this snippet will checkout the trunks of each code.  If you need to use specific tags, use the appropriate svn commands
svn co svn+ssh://svn.cern.ch/reps/atlasinst/Institutes/UCIrvine/SUSYAnalysis/SusyNtuple/trunk SusyNtuple
svn co svn+ssh://svn.cern.ch/reps/atlasphys/Physics/SUSY/Analyses/Multilepton/trunk/twentyinvfb/MultiLep MultiLep
source MultiLep/installscripts/install_script.sh
# Or, for convenience, these commands have been put in this package (kinit first):
source SusyCommon/scripts/install.sh

# for examples, here is my analysis code which depends on this package
https://svnweb.cern.ch/trac/atlasinst/browser/Institutes/UCIrvine/sfarrell/SusyAna


#------------------------------------------------------------------------------------
# Overview of the package
# This was not updated....
#------------------------------------------------------------------------------------

SusyDefs
  - typedefs, constants, global functions, etc.

SusyD3PDInterface
  - TSelector for processing Susy D3PDs
  - Provides access to d3pd objects via 'd3pd' container

SusyD3PDAna
  - Inherits from SusyD3PDInterface
  - Holds all the functionality for doing the analysis out of d3pds.
    Object selection, event cleaning, reweighting, etc.

SusyNt
  - Definitions for the SusyNt classes: particles, jets, event variables, etc.

SusyNtObject
  - Manages SusyNt read/write of branches

SusyNtMaker
  - Inherits from SusyD3PDAna
  - Applies cleaning cuts and event filtering
  - Writes a SusyNt tree

SusyNtAna
  - TSelector which will run on SusyNt
  - Holds functionality to do final object selections
        

# Executables
SusyD3PDTest
  - Just dumps D3PD variables, for testing

NtMaker
  - Runs the SusyNtMaker

SusyNtTest
  - Example executable for processing SusyNt



#------------------------------------------------------------------------------------
# Examples on how to run
#------------------------------------------------------------------------------------

##################
# To Make SusyNt #
##################

1.) compile with Rootcore, or in standalone mode
2.) cd run/
3.) Create a list of d3pd files into a text file

command: NtMaker -s mc -f fileList.txt
Notice the second option is 'mc'.  If you want to run over data, simply insert 'data' here.
Also, NtMaker -h will show you the current list of options.  More will be added soon to turn on
and off systematics

After you run NtMaker, it will spit out a susyNt.root which will contain the tree

For more advanced grid production of SusyNt, please see the scripts under grid/


##########################
# How to Run over SusyNt #
##########################

# This info should be removed from here, updated, and put in the SusyNtuple package README

1.) Move to run/ area
2.) Put your files to run over in a list
command: SusyNtTest -f fileList.txt

Other commands exist and can be found by running SusyNtTest -h
This list will be updated to include switching on and off sys.

#------------------------------------------------------------------------------------
# More stuff to come!
#------------------------------------------------------------------------------------

# Things needed to be addressed in the latest version:

In SusyCommon:

[ ] Add remaining systematics
[ ] Add necessary MC information to do signal diagram selection, charge flip, ID decay (eg ttbar dilepton)
[?] Add metadata: D3PD input list, D3PD tag, SusyTool tag, CommonCode tag, histogram with cutflow
[?] Improve event weighting skim for lumi so that if not all job run on grid, still ok (see Common code for how it's done there)
[ ] Add more cutflow counters to the SusyNtMaker so we can easily compare cutflows with the common code
        * Might actually be better to make a separate d3pd cutflow class...

In SusyNtuple:

[ ] Compare systematic shifts with someone TBD.
[ ] Add the rest of the systematic shifts (trigger eff, etc.)
[ ] Right now the code is not setup to run just on d3pd. My modifications were done to
    accomodate making SusyNt. We need to add option for either d3pd or SusyNt mode, which
    will place back all the cuts on badJet, badMuon, etc.

[ ] ... Anything else?
